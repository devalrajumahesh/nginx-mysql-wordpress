---
- hosts: localhost
  tasks:
  - name: Install EPEL release for nginx
    yum: name=epel-release state=present
  - name: Install Nginx
    yum: name=nginx state=present
  - name: start nginx
    service: name=nginx state=started enabled=yes
  - name: copy the file to nginx congig
    copy: src=/opt/nginx.conf dest=/etc/nginx/nginx.conf
  - name: enable the epel
    command: sed -i "s/enabled=0/enabled=1/g" /etc/yum.repos.d/redhat-rhui.repo
  - name: Install Multiple packages
    yum: name={{ item }} state=installed
    with_items:
     - php
     - php-fpm
     - php-mysql
     - php-gd
     - mariadb-server
     - mariadb
  - name: start the php-fpm
    service: name=php-fpm state=started enabled=yes
  - name: start mariadb
    service: name=mariadb state=started enabled=yes
  - name: remove the files
    command: rm -rvf * /usr/share/nginx/html/
  - name: installing mysql-python
    yum: name=MySQL-python state=present
  - name: Creating database
    mysql_db: name=wordpress state=present
  - name: Create db User
    mysql_user: name=root password=Mahesh@123 host=localhost state=present
  - name: download wordpress page
    get_url: url=http://wordpress.org/latest.tar.gz dest=/opt/
  - name: untar
    unarchive: src=/opt/wordpress-5.1.1.tar.gz dest=/opt/
  - name: owner permissions
    command: chown -R root:root /opt/wordpress
  - name: copy the files
    command: cp -rvf /opt/wordpress /usr/share/nginx/html/
  - name: copy the files
    copy: src=/opt/wp-config.php  dest=/usr/share/nginx/html/
  - name: restart the nginx service
    yum: name=nginx state=present





rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm


nginx.conf=================================

user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
   worker_connections  1024;
}

http {
   include       /etc/nginx/mime.types;
   default_type  application/octet-stream;

   log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

   access_log  /var/log/nginx/access.log  main;

   sendfile        on;
   keepalive_timeout  65;

   server {
      listen       80 default_server;
      server_name  localhost;
      root         /usr/share/nginx/html;
      index       index.html index.htm index.php;

      location / {
           try_files $uri $uri/ /index.php?$args;
      }
      error_page  404              /404.html;
      location = /40x.html {
      }

      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
      }

      # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
      location ~ \.php$ {
         root           /usr/share/nginx/html;
         try_files $uri =404;
         fastcgi_pass    127.0.0.1:9000;
         fastcgi_index    index.php;
         include              fastcgi_params;
         fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
      }
   }
}



wordpress=======wp-config.php

<?php
/**
 * The base configuration for WordPress
 *
 * The wp-config.php creation script uses this file during the
 * installation. You don't have to use the web site, you can
 * copy this file to "wp-config.php" and fill in the values.
 *
 * This file contains the following configurations:
 *
 * * MySQL settings
 * * Secret keys
 * * Database table prefix
 * * ABSPATH
 *
 * @link https://codex.wordpress.org/Editing_wp-config.php
 *
 * @package WordPress
 */

// ** MySQL settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define( 'DB_NAME', 'wordpress' );

/** MySQL database username */
define( 'DB_USER', 'root' );

/** MySQL database password */
define( 'DB_PASSWORD', 'Mahesh@123' );

/** MySQL hostname */
define( 'DB_HOST', 'localhost' );

/** Database Charset to use in creating database tables. */
define( 'DB_CHARSET', 'utf8' );

/** The Database Collate type. Don't change this if in doubt. */
define( 'DB_COLLATE', '' );

/**#@+
 * Authentication Unique Keys and Salts.
 *
 * Change these to different unique phrases!
 * You can generate these using the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}
 * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.
 *
 * @since 2.6.0
 */
define( 'AUTH_KEY',         'put your unique phrase here' );
define( 'SECURE_AUTH_KEY',  'put your unique phrase here' );
define( 'LOGGED_IN_KEY',    'put your unique phrase here' );
define( 'NONCE_KEY',        'put your unique phrase here' );
define( 'AUTH_SALT',        'put your unique phrase here' );
define( 'SECURE_AUTH_SALT', 'put your unique phrase here' );
define( 'LOGGED_IN_SALT',   'put your unique phrase here' );
define( 'NONCE_SALT',       'put your unique phrase here' );

/**#@-*/

/**
 * WordPress Database Table prefix.
 *
 * You can have multiple installations in one database if you give each
 * a unique prefix. Only numbers, letters, and underscores please!
 */
$table_prefix = 'wp_';

/**
 * For developers: WordPress debugging mode.
 *
 * Change this to true to enable the display of notices during development.
 * It is strongly recommended that plugin and theme developers use WP_DEBUG
 * in their development environments.
 *
 * For information on other constants that can be used for debugging,
 * visit the Codex.
 *
 * @link https://codex.wordpress.org/Debugging_in_WordPress
 */
define( 'WP_DEBUG', false );

/* That's all, stop editing! Happy publishing. */

/** Absolute path to the WordPress directory. */
if ( ! defined( 'ABSPATH' ) ) {
        define( 'ABSPATH', dirname( __FILE__ ) . '/' );
}

/** Sets up WordPress vars and included files. */
require_once( ABSPATH . 'wp-settings.php' );


vi /root/.my.cnf

[client] 
 user=root
 password=Mahesh@123





